.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH LWP-REQUEST 1 "libwww-perl-5.36" "11/Nov/98" "User Contributed Perl Documentation"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
lwp-request, GET, HEAD, POST \- Simple WWW user agent
.SH "SYNOPSIS"
.PP
.Vb 3
\& lwp-request [-aeEdvhx] [-m method] [-b <base URL>] [-t <timeout>]
\&             [-i <if-modified-since>] [-c <content-type>] [-C <credentials>]
\&             [-p <proxy-url>] [-o <format>] <url>...
.Ve
.SH "DESCRIPTION"
This program can be used to send requests to WWW servers and your
local file system. The request content for POST, PUT and CHECKIN
methods is read from stdin.  The content of the response is printed on
stdout.  Error messages are printed on stderr.  The program returns a
status value indicating the number of URLs that failed.
.PP
The options are:
.Ip "-m <method>" 4
Set which method to use for the request.  If this option is not used,
then the method is derived from the name of the program.
.Ip "-f" 4
Force request through, even if the program believes that the method is
illegal.  The server will probably reject the request.
.Ip "-b <url>" 4
This \s-1URL\s0 will be used as the base \s-1URL\s0 for the URLs that the method is
applied to.  The base \s-1URL\s0 only takes effect for relative URLs.  If you
do not provide this option and the URLs are relative, then they will
be treated as files in the local file system.
.Ip "-t <timeout>" 4
Set the timeout value for the requests.  The timeout is the amount of
time that the program will wait for a response from the remote server
before it fails.  The default unit for the timeout value is seconds.
You might append \*(L"m\*(R" or \*(L"h\*(R" to the timeout value to make it minutes or
hours, respectively.  The default timeout is \*(L'3m\*(R', i.e. 3 minutes.
.Ip "-i <time>" 4
Set the If-Modified-Since header in the request. If \fItime\fR it the
name of a file, use the modification timestamp for this file. If
\fItime\fR is not a file, it is parsed as a literal date. Take a look at
the \fI\s-1HTTP::\s0Date\fR manpage for recogniced formats.
.Ip "-c <content-type>" 4
Set the Content-Type for the request.  This option is only allowed for
requests that take a content, i.e. \s-1POST\s0, \s-1PUT\s0 and \s-1CHECKIN\s0.  You can
force methods to take content by using the \f(CW-f\fR option together with
\f(CW-c\fR.  The default Content-Type for \s-1POST\s0 is
\f(CWapplication/x-www-form-urlencoded\fR.  The default Content-type for
the others is \f(CWtext/plain\fR.
.Ip "-p <proxy-url>" 4
Set the proxy to be used for the requests.  The program also loads
proxy settings from the environment.  You can disable this with the
\f(CW-P\fR option.
.Ip "-C <username>:<password>" 4
Provide credentials for documents that are protected by Basic
Authentication.  If the document is protected and you did not specify
the username and password with this option, then you will be prompted
to provide these values.
.PP
The following options controls what is displayed by the program:
.Ip "-u" 4
Print request method and absolute \s-1URL\s0 as requests are made.
.Ip "-U" 4
Print request headers in addition to request method and absolute \s-1URL\s0.
.Ip "-s" 4
Print response status code.  This option is always on for \s-1HEAD\s0 requests.
.Ip "-S" 4
Print response status chain. This shows redirect and autorization
requests that are handled by the library.
.Ip "-e" 4
Print response headers.  This option is always on for \s-1HEAD\s0 requests.
.Ip "-d" 4
Do \fBnot\fR print the content of the response.
.Ip "-o <format>" 4
Process \s-1HTML\s0 content in various ways before printing it.  If the
content type of the response is not \s-1HTML\s0, then this option has no
effect.  The legal format values are; \fItext\fR, \fIps\fR, \fIlinks\fR,
\fIhtml\fR and \fIdump\fR.
.Sp
If you specify the \fItext\fR format then the \s-1HTML\s0 will be formatted as
plain latin1 text.  If you specify the \fIps\fR format then it will be
formatted as Postscript.
.Sp
The \fIlinks\fR format will output all links found in the \s-1HTML\s0 document.
Relative links will be expanded to absolute ones.
.Sp
The \fIhtml\fR format will reformat the \s-1HTML\s0 code and the \fIdump\fR format
will just dump the \s-1HTML\s0 syntax tree.
.Ip "-v" 4
Print the version number of the program and quit.
.Ip "-h" 4
Print usage message and quit.
.Ip "-x" 4
Extra debugging output.
.Ip "-a" 4
Set \fItext\fR\|(ascii) mode for content input and output.  If this option is not 
used, content input and output is done in binary mode.
.PP
Because this program is implemented using the \s-1LWP\s0 library, it will
only support the protocols that \s-1LWP\s0 supports.
.SH "SEE ALSO"
the \fIlwp-mirror\fR manpage, the \fILWP\fR manpage
.SH "COPYRIGHT"
Copyright 1995-1997 Gisle Aas.
.PP
This library is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "AUTHOR"
Gisle Aas <aas@sn.no>

.rn }` ''
.IX Title "LWP-REQUEST 1"
.IX Name "lwp-request, GET, HEAD, POST - Simple WWW user agent"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Item "-m <method>"

.IX Item "-f"

.IX Item "-b <url>"

.IX Item "-t <timeout>"

.IX Item "-i <time>"

.IX Item "-c <content-type>"

.IX Item "-p <proxy-url>"

.IX Item "-C <username>:<password>"

.IX Item "-u"

.IX Item "-U"

.IX Item "-s"

.IX Item "-S"

.IX Item "-e"

.IX Item "-d"

.IX Item "-o <format>"

.IX Item "-v"

.IX Item "-h"

.IX Item "-x"

.IX Item "-a"

.IX Header "SEE ALSO"

.IX Header "COPYRIGHT"

.IX Header "AUTHOR"

