.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH DBIPROXY 1 "perl 5.007, patch 00" "19/Mar/102" "User Contributed Perl Documentation"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
dbiproxy \- A proxy server for the DBD::Proxy driver
.SH "SYNOPSIS"
.PP
.Vb 1
\&    dbiproxy <options> --port <port>
.Ve
.SH "DESCRIPTION"
This tool is just a front end for the DBI::ProxyServer package. All it
does is picking options from the command line and calling
\fIDBI::ProxyServer::main()\fR. See the \fIDBI::ProxyServer(3)\fR manpage for details.
.PP
Available options include:
.Ip "\fB--chroot=dir\fR" 4
(\s-1UNIX\s0 only)  After doing a \fIbind()\fR, change root directory to the given
directory by doing a \fIchroot()\fR. This is usefull for security, but it
restricts the environment a lot. For example, you need to load \s-1DBI\s0
drivers in the config file or you have to create hard links to Unix
sockets, if your drivers are using them. For example, with MySQL, a
config file might contain the following lines:
.Sp
.Vb 9
\&    my $rootdir = '/var/dbiproxy';
\&    my $unixsockdir = '/tmp';
\&    my $unixsockfile = 'mysql.sock';
\&    foreach $dir ($rootdir, "$rootdir$unixsockdir") {
\&        mkdir 0755, $dir;
\&    }
\&    link("$unixsockdir/$unixsockfile",
\&         "$rootdir$unixsockdir/$unixsockfile");
\&    require DBD::mysql;
.Ve
.Vb 4
\&    {
\&        'chroot' => $rootdir,
\&        ...
\&    }
.Ve
If you don't know \fIchroot()\fR, think of an \s-1FTP\s0 server where you can see a
certain directory tree only after logging in. See also the --group and
--user options.
.Ip "\fB--configfile=file\fR" 4
Config files are assumed to return a single hash ref that overrides the
arguments of the new method. However, command line arguments in turn take
precedence over the config file. See the the section on \fI\s-1CONFIGURATION\s0 \s-1FILE\s0\fR section
below for details on the config file.
.Ip "\fB--debug\fR" 4
Turn debugging mode on. Mainly this asserts that logging messages of
level \*(L"debug\*(R" are created.
.Ip "\fB--facility=mode\fR" 4
(\s-1UNIX\s0 only) Facility to use for the section on \fISys::Syslog (3)\fR. The default is
\fBdaemon\fR.
.Ip "\fB--group=gid\fR" 4
After doing a \fIbind()\fR, change the real and effective \s-1GID\s0 to the given.
This is usefull, if you want your server to bind to a privileged port
(<1024), but don't want the server to execute as root. See also
the --user option.
.Sp
\s-1GID\s0's can be passed as group names or numeric values.
.Ip "\fB--localaddr=ip\fR" 4
By default a daemon is listening to any \s-1IP\s0 number that a machine
has. This attribute allows to restrict the server to the given
\s-1IP\s0 number.
.Ip "\fB--localport=port\fR" 4
This attribute sets the port on which the daemon is listening. It
must be given somehow, as there's no default.
.Ip "\fB--logfile=file\fR" 4
Be default logging messages will be written to the syslog (Unix) or
to the event log (Windows \s-1NT\s0). On other operating systems you need to
specify a log file. The special value \*(L"\s-1STDERR\s0\*(R" forces logging to
stderr. See the \fINet::Daemon::Log(3)\fR manpage for details.
.Ip "\fB--mode=modename\fR" 4
The server can run in three different modes, depending on the environment.
.Sp
If you are running Perl 5.005 and did compile it for threads, then the
server will create a new thread for each connection. The thread will
execute the server's \fIRun()\fR method and then terminate. This mode is the
default, you can force it with \*(L"\*(--mode=threads\*(R".
.Sp
If threads are not available, but you have a working \fIfork()\fR, then the
server will behave similar by creating a new process for each connection.
This mode will be used automatically in the absence of threads or if
you use the \*(L"\*(--mode=fork\*(R" option.
.Sp
Finally there's a single-connection mode: If the server has accepted a
connection, he will enter the \fIRun()\fR method. No other connections are
accepted until the \fIRun()\fR method returns (if the client disconnects).
This operation mode is usefull if you have neither threads nor \fIfork()\fR,
for example on the Macintosh. For debugging purposes you can force this
mode with \*(L"\*(--mode=single\*(R".
.Ip "\fB--pidfile=file\fR" 4
(\s-1UNIX\s0 only) If this option is present, a \s-1PID\s0 file will be created at the
given location.
.Ip "\fB--user=uid\fR" 4
After doing a \fIbind()\fR, change the real and effective \s-1UID\s0 to the given.
This is usefull, if you want your server to bind to a privileged port
(<1024), but don't want the server to execute as root. See also
the --group and the --chroot options.
.Sp
\s-1UID\s0's can be passed as group names or numeric values.
.Ip "\fB--version\fR" 4
Supresses startup of the server; instead the version string will
be printed and the program exits immediately.
.SH "AUTHOR"
.PP
.Vb 4
\&    Copyright (c) 1997    Jochen Wiedmann
\&                          Am Eisteich 9
\&                          72555 Metzingen
\&                          Germany
.Ve
.Vb 2
\&                          Email: joe@ispsoft.de
\&                          Phone: +49 7123 14881
.Ve
The DBI::ProxyServer module is free software; you can redistribute it
and/or modify it under the same terms as Perl itself. In particular
permission is granted to Tim Bunce for distributing this as a part of
the DBI.
.SH "SEE ALSO"
the \fIDBI::ProxyServer(3)\fR manpage, the \fIDBD::Proxy(3)\fR manpage, the \fIDBI(3)\fR manpage

.rn }` ''
.IX Title "DBIPROXY 1"
.IX Name "dbiproxy - A proxy server for the DBD::Proxy driver"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Item "\fB--chroot=dir\fR"

.IX Item "\fB--configfile=file\fR"

.IX Item "\fB--debug\fR"

.IX Item "\fB--facility=mode\fR"

.IX Item "\fB--group=gid\fR"

.IX Item "\fB--localaddr=ip\fR"

.IX Item "\fB--localport=port\fR"

.IX Item "\fB--logfile=file\fR"

.IX Item "\fB--mode=modename\fR"

.IX Item "\fB--pidfile=file\fR"

.IX Item "\fB--user=uid\fR"

.IX Item "\fB--version\fR"

.IX Header "AUTHOR"

.IX Header "SEE ALSO"

