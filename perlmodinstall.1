.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH PERLMODINSTALL 1 "perl 5.005, patch 53" "25/Jul/98" "Perl Programmers Reference Guide"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
perlmodinstall \- Installing CPAN Modules
.SH "DESCRIPTION"
You can think of a module as the fundamental unit of reusable Perl
code; see the \fIperlmod\fR manpage for details.  Whenever anyone creates a chunk of
Perl code that they think will be useful to the world, they register
as a Perl developer at http://www.perl.com/CPAN/modules/04pause.html
so that they can then upload their code to the CPAN.  The CPAN is the
Comprehensive Perl Archive Network and can be accessed at
http://www.perl.com/CPAN/.
.PP
This documentation is for people who want to download CPAN modules
and install them on their own computer.
.Sh "\s-1PREAMBLE\s0"
You have a file ending in .tar.gz (or, less often, .zip).  You know
there's a tasty module inside.  There are four steps you must now
take:
.Ip "\fB\s-1DECOMPRESS\s0\fR the file" 5
.Ip "\fB\s-1UNPACK\s0\fR the file into a directory" 5
.Ip "\fB\s-1BUILD\s0\fR the module (sometimes unnecessary)" 5
.Ip "\fB\s-1INSTALL\s0\fR the module." 5
.PP
Here's how to perform each step for each operating system.  This is
\fInot\fR a substitute for reading the \s-1README\s0 and \s-1INSTALL\s0 files that
might have come with your module!
.PP
Also note that these instructions are tailored for installing the
module into your system's repository of Perl modules.  But you can
install modules into any directory you wish.  For instance, where I
say \f(CWperl Makefile.PL\fR, you can substitute \f(CWperl
Makefile.PL PREFIX=/my/perl_directory\fR to install the modules
into \f(CW/my/perl_directory\fR.  Then you can use the modules
from your Perl programs with \f(CWuse lib
"/my/perl_directory/lib/site_perl";\fR or sometimes just \f(CWuse
"/my/perl_directory";\fR.  
.Ip "\(bu" 4
\fBIf you're on Unix,\fR
.Sp
You can use Andreas Koenig's \s-1CPAN\s0 module 
( http://www.perl.com/\s-1CPAN/\s0modules/by-module/\s-1CPAN\s0 ) 
to automate the following steps, from \s-1DECOMPRESS\s0 through \s-1INSTALL\s0.
.Sp
A. \s-1DECOMPRESS\s0 
.Sp
Decompress the file with \f(CWgzip -d yourmodule.tar.gz\fR
.Sp
You can get gzip from ftp://prep.ai.mit.edu/pub/gnu. 
.Sp
Or, you can combine this step with the next to save disk space:
.Sp
.Vb 1
\&     gzip -dc yourmodule.tar.gz | tar -xof -
.Ve
B. \s-1UNPACK\s0
.Sp
Unpack the result with \f(CWtar -xof yourmodule.tar\fR
.Sp
C. \s-1BUILD\s0
.Sp
Go into the newly-created directory and type:
.Sp
.Vb 3
\&      perl Makefile.PL
\&      make
\&      make test
.Ve
D. \s-1INSTALL\s0
.Sp
While still in that directory, type:
.Sp
.Vb 1
\&      make install
.Ve
Make sure you have the appropriate permissions to install the module
in your Perl 5 library directory.  Often, you'll need to be root.
.Sp
That's all you need to do on Unix systems with dynamic linking.
Most Unix systems have dynamic linking -- if yours doesn't, or if for
another reason you have a statically-linked perl, \fBand\fR the
module requires compilation, you'll need to build a new Perl binary
that includes the module.  Again, you'll probably need to be root.
.Ip "\(bu" 4
\fBIf you're running Windows 95 or \s-1NT\s0 with the ActiveState port of Perl\fR
.Sp
.Vb 1
\&   A. DECOMPRESS
.Ve
You can use the shareware Winzip ( http://www.winzip.com ) to
decompress and unpack modules.
.Sp
.Vb 1
\&   B. UNPACK
.Ve
If you used WinZip, this was already done for you.
.Sp
.Vb 1
\&   C. BUILD
.Ve
Does the module require compilation (i.e. does it have files
that end in .xs, .c, .h, .y, .cc, .cxx, or .C)?  If it does, you're on
your own.  You can try compiling it yourself if you have a C compiler.
If you're successful, consider uploading the resulting binary to the
\s-1CPAN\s0 for others to use.  If it doesn't, go to \s-1INSTALL\s0.
.Sp
.Vb 1
\&   D. INSTALL
.Ve
Copy the module into your Perl's \fIlib\fR directory.  That'll be one
of the directories you see when you type 
.Sp
.Vb 1
\&   perl -e 'print "@INC"'
.Ve
.Ip "\(bu" 4
\fBIf you're running Windows 95 or \s-1NT\s0 with the core Windows distribution of Perl,\fR
.Sp
.Vb 1
\&   A. DECOMPRESS
.Ve
When you download the module, make sure it ends in either
\&\f(CW.tar.gz\fR or \f(CW.zip\fR.  Windows browsers sometimes
download \f(CW.tar.gz\fR files as \f(CW_tar.tar\fR, because
early versions of Windows prohibited more than one dot in a filename.
.Sp
You can use the shareware WinZip ( http://www.winzip.com ) to
decompress and unpack modules.
.Sp
Or, you can use InfoZip's \f(CWunzip\fR utility (
http://www.cdrom.com/pub/infozip/Info-Zip.html ) to uncompress
\&\f(CW.zip\fR files; type \f(CWunzip yourmodule.zip\fR in
your shell.
.Sp
Or, if you have a working \f(CWtar\fR and \f(CWgzip\fR, you can
type
.Sp
.Vb 1
\&   gzip -cd yourmodule.tar.gz | tar xvf -
.Ve
in the shell to decompress \f(CWyourmodule.tar.gz\fR.  This will
\s-1UNPACK\s0 your module as well.
.Sp
.Vb 1
\&   B. UNPACK
.Ve
All of the methods in \s-1DECOMPRESS\s0 will have done this for you.
.Sp
.Vb 1
\&   C. BUILD
.Ve
Go into the newly-created directory and type:
.Sp
.Vb 3
\&      perl Makefile.PL
\&      dmake
\&      dmake test
.Ve
Depending on your perl configuration, \f(CWdmake\fR might not be
available.  You might have to substitute whatever \f(CWperl
-V:make\fR says. (Usually, that will be \f(CWnmake\fR or
\f(CWmake\fR.)
.Sp
.Vb 1
\&   D. INSTALL
.Ve
While still in that directory, type:
.Sp
.Vb 1
\&      dmake install
.Ve
.Ip "\(bu" 4
\fBIf you're using a Macintosh,\fR
.Sp
A. \s-1DECOMPRESS\s0
.Sp
You can either use StuffIt Expander ( http://www.aladdinsys.com/ ) in
combination with \fIDropStuff with Expander Enhancer\fR
(shareware), or the freeware MacGzip (
http://persephone.cps.unizar.es/general/gente/spd/gzip/gzip.html ).
.Sp
B. \s-1UNPACK\s0
.Sp
If you're using DropStuff or Stuffit, you can just extract the tar
archive.  Otherwise, you can use the freeware \fIsuntar\fR (
http://www.cirfid.unibo.it/~speranza ).
.Sp
C. \s-1BUILD\s0
.Sp
Does the module require compilation? 
.Sp
1. If it does,
.Sp
Overview: You need \s-1MPW\s0 and a combination of new and old CodeWarrior
compilers for \s-1MPW\s0 and libraries.  Makefiles created for building under
\s-1MPW\s0 use the Metrowerks compilers.  It's most likely possible to build
without other compilers, but it has not been done successfully, to our
knowledge.  Read the documentation in MacPerl: Power and Ease (
http://www.ptf.com/macperl/ ) on porting/building extensions, or find
an existing precompiled binary, or hire someone to build it for you.
.Sp
Or, ask someone on the mac-perl mailing list (mac-perl@iis.ee.ethz.ch)
to build it for you.  To subscribe to the mac-perl mailing list, send
mail to mac-perl-request@iis.ee.ethz.ch.
.Sp
2. If the module doesn't require compilation, go to \s-1INSTALL\s0.
.Sp
D. \s-1INSTALL\s0
.Sp
Make sure the newlines for the modules are in Mac format, not Unix format.
Move the files manually into the correct folders.
.Sp
Move the files to their final destination: This will
most likely be in \f(CW$ENV{MACPERL}site_lib:\fR (i.e.,
\f(CWHD:MacPerl folder:site_lib:\fR).  You can add new paths to
the default \f(CW@INC\fR in the Preferences menu item in the
MacPerl application (\f(CW$ENV{MACPERL}site_lib:\fR is added
automagically).  Create whatever directory structures are required
(i.e., for \f(CWSome::Module\fR, create
\f(CW$ENV{MACPERL}site_lib:Some:\fR and put
\f(CWModule.pm\fR in that directory).
.Sp
Run the following script (or something like it):
.Sp
.Vb 4
\&     #!perl -w
\&     use AutoSplit;
\&     my $dir = "${MACPERL}site_perl";
\&     autosplit("$dir:Some:Module.pm", "$dir:auto", 0, 1, 1);
.Ve
Eventually there should be a way to automate the installation process; some
solutions exist, but none are ready for the general public yet.
.Ip "\(bu" 4
\fBIf you're on the \s-1DJGPP\s0 port of \s-1DOS\s0,\fR
.Sp
.Vb 1
\&   A. DECOMPRESS
.Ve
djtarx ( ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2/ )
will both uncompress and unpack.  
.Sp
.Vb 1
\&   B. UNPACK
.Ve
See above.
.Sp
.Vb 1
\&   C. BUILD
.Ve
Go into the newly-created directory and type:
.Sp
.Vb 3
\&      perl Makefile.PL
\&      make
\&      make test
.Ve
You will need the packages mentioned in \f(CWReadme.dos\fR
in the Perl distribution.
.Sp
.Vb 1
\&   D. INSTALL
.Ve
While still in that directory, type:
.Sp
.Vb 3
\&     make install       
\&     
\&You will need the packages mentioned in Readme.dos in the Perl distribution.
.Ve
.Ip "\(bu" 4
\fBIf you're on \s-1OS/2\s0,\fR
.Sp
Get the \s-1EMX\s0 development suite and gzip/tar, from either Hobbes (
http://hobbes.nmsu.edu ) or Leo ( http://www.leo.org ), and then follow
the instructions for Unix.
.Ip "\(bu" 4
\fBIf you're on \s-1VMS\s0,\fR
.Sp
When downloading from \s-1CPAN\s0, save your file with a \f(CW.tgz\fR
extension instead of \f(CW.tar.gz\fR.  All other periods in the
filename should be replaced with underscores.  For example,
\f(CWYour-Module-1.33.tar.gz\fR should be downloaded as
\f(CWYour-Module-1_33.tgz\fR.
.Sp
A. \s-1DECOMPRESS\s0
.Sp
Type 
.Sp
.Vb 1
\&    gzip -d Your-Module.tgz
.Ve
or, for zipped modules, type 
.Sp
.Vb 1
\&    unzip Your-Module.zip
.Ve
Executables for gzip, zip, and VMStar ( Alphas:
http://www.openvms.digital.com/cd/000TOOLS/\s-1ALPHA\s0/ and Vaxen:
http://www.openvms.digital.com/cd/000TOOLS/\s-1VAX\s0/ ).  
.Sp
gzip and tar
are also available at ftp://ftp.digital.com/pub/\s-1VMS\s0.
.Sp
Note that \s-1GNU\s0's gzip/gunzip is not the same as Info-\s-1ZIP\s0's zip/unzip
package.  The former is a simple compression tool; the latter permits
creation of multi-file archives.
.Sp
B. \s-1UNPACK\s0
.Sp
If you're using VMStar:
.Sp
.Vb 1
\&     VMStar xf Your-Module.tar
.Ve
Or, if you're fond of \s-1VMS\s0 command syntax:
.Sp
.Vb 1
\&     tar/extract/verbose Your_Module.tar
.Ve
C. \s-1BUILD\s0 
.Sp
Make sure you have \s-1MMS\s0 (from Digital) or the freeware \s-1MMK\s0 ( available from MadGoat at  http://www.madgoat.com ).  Then type this to create the
\s-1DESCRIP\s0.\s-1MMS\s0 for the module: 
.Sp
.Vb 1
\&    perl Makefile.PL
.Ve
Now you're ready to build:
.Sp
.Vb 2
\&    mms
\&    mms test
.Ve
Substitute \f(CWmmk\fR for \f(CWmms\fR above if you're using \s-1MMK\s0.
.Sp
D. \s-1INSTALL\s0
.Sp
Type 
.Sp
.Vb 1
\&    mms install
.Ve
Substitute \f(CWmmk\fR for \f(CWmms\fR above if you're using \s-1MMK\s0.
.Ip "\(bu" 4
\fBIf you're on \s-1MVS\s0\fR,
.Sp
Introduce the .tar.gz file into an \s-1HFS\s0 as binary; don't translate from
\s-1ASCII\s0 to \s-1EBCDIC\s0.
.Sp
A. \s-1DECOMPRESS\s0 
.Sp
.Vb 1
\&      Decompress the file with C<gzip -d yourmodule.tar.gz>
.Ve
.Vb 2
\&      You can get gzip from 
\&      http://www.s390.ibm.com/products/oe/bpxqp1.html.
.Ve
B. \s-1UNPACK\s0
.Sp
Unpack the result with 
.Sp
.Vb 1
\&     pax -o to=IBM-1047,from=ISO8859-1 -r < yourmodule.tar
.Ve
The \s-1BUILD\s0 and \s-1INSTALL\s0 steps are identical to those for Unix.  Some
modules generate Makefiles that work better with \s-1GNU\s0 make, which is
available from http://www.mks.com/s390/gnu/index.htm.
.SH "HEY"
If you have any suggested changes for this page, let me know.  Please
don't send me mail asking for help on how to install your modules.
There are too many modules, and too few Orwants, for me to be able to
answer or even acknowledge all your questions.  Contact the module
author instead, or post to comp.lang.perl.modules, or ask someone
familiar with Perl on your operating system.
.SH "AUTHOR"
Jon Orwant 
.PP
orwant@tpj.com
.PP
The Perl Journal, http://tpj.com
.PP
with invaluable help from Brandon Allbery, Charles Bailey, Graham
Barr, Dominic Dunlop, Jarkko Hietaniemi, Ben Holzman, Tom Horsley,
Nick Ing-Simmons, Tuomas J. Lukka, Laszlo Molnar, Chris Nandor, Alan
Olsen, Peter Prymmer, Gurusamy Sarathy, Christoph Spalinger, Dan
Sugalski, Larry Virden, and Ilya Zakharevich.
.PP
July 22, 1998
.SH "COPYRIGHT"
Copyright (C) 1998 Jon Orwant.  All Rights Reserved.
.PP
Permission is granted to make and distribute verbatim copies of this
documentation provided the copyright notice and this permission notice are
preserved on all copies.
.PP
Permission is granted to copy and distribute modified versions of this
documentation under the conditions for verbatim copying, provided also
that they are marked clearly as modified versions, that the authors\*(R'
names and title are unchanged (though subtitles and additional
authors\*(R' names may be added), and that the entire resulting derived
work is distributed under the terms of a permission notice identical
to this one.
.PP
Permission is granted to copy and distribute translations of this
documentation into another language, under the above conditions for
modified versions.

.rn }` ''
.IX Title "PERLMODINSTALL 1"
.IX Name "perlmodinstall - Installing CPAN Modules"

.IX Header "NAME"

.IX Header "DESCRIPTION"

.IX Subsection "\s-1PREAMBLE\s0"

.IX Item "\fB\s-1DECOMPRESS\s0\fR the file"

.IX Item "\fB\s-1UNPACK\s0\fR the file into a directory"

.IX Item "\fB\s-1BUILD\s0\fR the module (sometimes unnecessary)"

.IX Item "\fB\s-1INSTALL\s0\fR the module."

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Header "HEY"

.IX Header "AUTHOR"

.IX Header "COPYRIGHT"

