.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH DPROFPP 1 "perl 5.004, patch 01" "16/Jun/97" "User Contributed Perl Documentation"
.IX Title "DPROFPP 1"
.UC
.IX Name "dprofpp - display perl profile data"
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
.IX Header "NAME"
dprofpp \- display perl profile data
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
dprofpp [\fB\-a\fR|\fB\-z\fR|\fB\-l\fR|\fB\-v\fR|\fB\-U\fR] [\fB\-s\fR|\fB\-r\fR|\fB\-u\fR] [\fB\-q\fR] [\fB\-F\fR] [\fB\-I|\-E\fR] [\fB\-O cnt\fR] [profile]
.PP
dprofpp \fB\-T\fR [\fB\-F\fR] [profile]
.PP
dprofpp \fB\-t\fR [\fB\-F\fR] [profile]
.PP
dprofpp \fB\-p script\fR [\fB\-Q\fR] [other opts]
.PP
dprofpp \fB\-V\fR [profile]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fIdprofpp\fR command interprets profile data produced by a profiler, such
as the Devel::DProf profiler.  Dprofpp will read the file \fItmon.out\fR and
will display the 15 subroutines which are using the most time.  By default
the times for each subroutine are given exclusive of the times of their
child subroutines.
.PP
To profile a Perl script run the perl interpreter with the \fB\-d\fR switch.  So
to profile script \fItest.pl\fR with Devel::DProf the following command should
be used.
.PP
.Vb 1
\&        $ perl5 -d:DProf test.pl
.Ve
Then run dprofpp to analyze the profile.
.PP
.Vb 9
\&        $ dprofpp -u
\&        Total Elapsed Time =    1.67 Seconds
\&                 User Time =    0.61 Seconds
\&        Exclusive Times
\&        %Time Seconds     #Calls sec/call Name
\&         52.4   0.320          2   0.1600 main::foo
\&         45.9   0.280        200   0.0014 main::bar
\&         0.00   0.000          1   0.0000 DynaLoader::import
\&         0.00   0.000          1   0.0000 main::baz
.Ve
The dprofpp tool can also run the profiler before analyzing the profile
data.  The above two commands can be executed with one dprofpp command.
.PP
.Vb 1
\&        $ dprofpp -u -p test.pl
.Ve
Consult the section on \fIPROFILE FORMAT\fR in the \fIDevel::DProf\fR manpage for a description of the raw profile.
.SH "OPTIONS"
.IX Header "OPTIONS"
.Ip "\fB\-a\fR" 5
.IX Item "\fB\-a\fR"
Sort alphabetically by subroutine names.
.Ip "\fB\-E\fR" 5
.IX Item "\fB\-E\fR"
(default)  Display all subroutine times exclusive of child subroutine times.
.Ip "\fB\-F\fR" 5
.IX Item "\fB\-F\fR"
Force the generation of fake exit timestamps if dprofpp reports that the
profile is garbled.  This is only useful if dprofpp determines that the
profile is garbled due to missing exit timestamps.  You're on your own if
you do this.  Consult the \s-1BUGS\s0 section.
.Ip "\fB\-I\fR" 5
.IX Item "\fB\-I\fR"
Display all subroutine times inclusive of child subroutine times.
.Ip "\fB\-l\fR" 5
.IX Item "\fB\-l\fR"
Sort by number of calls to the subroutines.  This may help identify
candidates for inlining.
.Ip "\fB\-O cnt\fR" 5
.IX Item "\fB\-O cnt\fR"
Show only \fIcnt\fR subroutines.  The default is 15.
.Ip "\fB\-p script\fR" 5
.IX Item "\fB\-p script\fR"
Tells dprofpp that it should profile the given script and then interpret its
profile data.  See \fB\-Q\fR.
.Ip "\fB\-Q\fR" 5
.IX Item "\fB\-Q\fR"
Used with \fB\-p\fR to tell dprofpp to quit after profiling the script, without
interpreting the data.
.Ip "\fB\-q\fR" 5
.IX Item "\fB\-q\fR"
Do not display column headers.
.Ip "\fB\-r\fR" 5
.IX Item "\fB\-r\fR"
Display elapsed real times rather than user+system times.
.Ip "\fB\-s\fR" 5
.IX Item "\fB\-s\fR"
Display system times rather than user+system times.
.Ip "\fB\-T\fR" 5
.IX Item "\fB\-T\fR"
Display subroutine call tree to stdout.  Subroutine statistics are
not displayed.
.Ip "\fB\-t\fR" 5
.IX Item "\fB\-t\fR"
Display subroutine call tree to stdout.  Subroutine statistics are not
displayed.  When a function is called multiple consecutive times at the same
calling level then it is displayed once with a repeat count.
.Ip "\fB\-U\fR" 5
.IX Item "\fB\-U\fR"
Do not sort.  Display in the order found in the raw profile.
.Ip "\fB\-u\fR" 5
.IX Item "\fB\-u\fR"
Display user times rather than user+system times.
.Ip "\fB\-V\fR" 5
.IX Item "\fB\-V\fR"
Print dprofpp's version number and exit.  If a raw profile is found then its
\s-1XS_VERSION\s0 variable will be displayed, too.
.Ip "\fB\-v\fR" 5
.IX Item "\fB\-v\fR"
Sort by average time spent in subroutines during each call.  This may help
identify candidates for inlining. 
.Ip "\fB\-z\fR" 5
.IX Item "\fB\-z\fR"
(default) Sort by amount of user+system time used.  The first few lines
should show you which subroutines are using the most time.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
The environment variable \fBDPROFPP_OPTS\fR can be set to a string containing
options for dprofpp.  You might use this if you prefer \fB\-I\fR over \fB\-E\fR or
if you want \fB\-F\fR on all the time.
.PP
This was added fairly lazily, so there are some undesirable side effects.
Options on the commandline should override options in DPROFPP_OPTS\*(--but
don't count on that in this version.
.SH "BUGS"
.IX Header "BUGS"
Applications which call \f(CWdie\fR from within an eval for exception handling
(catch/throw) or for setjmp/longjmp may not generate a readable profile.
See the \fB\-F\fR option.
.PP
Applications which call \f(CWexit\fR from within a subroutine will leave an
incomplete profile.  See the \fB\-F\fR option.
.PP
Any bugs in Devel::DProf, or any profiler generating the profile data, could
be visible here.  See the \f(CWBUGS\fR entry in the \fIDevel::DProf\fR manpage.
.PP
Mail bug reports and feature requests to the perl5-porters mailing list at
\fI<perl5-porters@africa.nicoh.com>\fR.  Bug reports should include the
output of the \fB\-V\fR option.
.SH "FILES"
.IX Header "FILES"
.PP
.Vb 2
\&        dprofpp         - profile processor
\&        tmon.out        - raw profile
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
the \fIperl\fR manpage, the \fIDevel::DProf\fR manpage, \fItimes\fR\|(2)

.rn }` ''
